// <auto-generated />
using System;
using BlackBird.TicketManagement.Infrastructure.TransverseRepositories.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlackBird.TicketManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ModelDataContext))]
    [Migration("20251017041711_Initial_Migration")]
    partial class Initial_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.GeneralTypeGroup", b =>
                {
                    b.Property<long>("GeneralTypeGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GeneralTypeGroupId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("GeneralTypeGroupId")
                        .HasName("PK_GeneralTypes");

                    b.ToTable("GeneralTypeGroups");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.GeneralTypeItem", b =>
                {
                    b.Property<long>("GeneralTypeItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GeneralTypeItemId"));

                    b.Property<long>("GeneralTypeGroupFk")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("GeneralTypeItemId");

                    b.HasIndex("GeneralTypeGroupFk");

                    b.ToTable("GeneralTypeItems");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.Ticket", b =>
                {
                    b.Property<long>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TicketId"));

                    b.Property<long?>("AsignedToUserFk")
                        .HasColumnType("bigint");

                    b.Property<string>("Audience")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<long>("CreatedByUserFk")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Details")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Localization")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<long>("TicketStateFk")
                        .HasColumnType("bigint");

                    b.Property<long>("TicketTypeFk")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedByUserFk")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ValidFrom")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ValidFrom");

                    b.Property<DateTime>("ValidTo")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("ValidTo");

                    b.HasKey("TicketId")
                        .HasName("PK__Tickets__712CC607530232FC");

                    b.HasIndex("AsignedToUserFk");

                    b.HasIndex("CreatedByUserFk");

                    b.HasIndex("TicketStateFk");

                    b.HasIndex("TicketTypeFk");

                    b.HasIndex("UpdatedByUserFk");

                    b.ToTable("Tickets");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("TicketsHistory", "dbo");
                                ttb
                                    .HasPeriodStart("ValidFrom")
                                    .HasColumnName("ValidFrom");
                                ttb
                                    .HasPeriodEnd("ValidTo")
                                    .HasColumnName("ValidTo");
                            }));
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastAccess")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("RoleFk")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleFk");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.UserRole", b =>
                {
                    b.Property<long>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserRoleId"));

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.GeneralTypeItem", b =>
                {
                    b.HasOne("BlackBird.TicketManagement.Infrastructure.Models.GeneralTypeGroup", "GeneralTypeGroupFkNavigation")
                        .WithMany("GeneralTypeItems")
                        .HasForeignKey("GeneralTypeGroupFk")
                        .IsRequired()
                        .HasConstraintName("FK_GeneralTypeItems_GeneralTypeGroups");

                    b.Navigation("GeneralTypeGroupFkNavigation");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.Ticket", b =>
                {
                    b.HasOne("BlackBird.TicketManagement.Infrastructure.Models.User", "AsignedToUserFkNavigation")
                        .WithMany("TicketAsignedToUserFkNavigations")
                        .HasForeignKey("AsignedToUserFk")
                        .HasConstraintName("FK_Tickets_Users1");

                    b.HasOne("BlackBird.TicketManagement.Infrastructure.Models.User", "CreatedByUserFkNavigation")
                        .WithMany("TicketCreatedByUserFkNavigations")
                        .HasForeignKey("CreatedByUserFk")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_Users");

                    b.HasOne("BlackBird.TicketManagement.Infrastructure.Models.GeneralTypeItem", "TicketStateFkNavigation")
                        .WithMany("TicketTicketStateFkNavigations")
                        .HasForeignKey("TicketStateFk")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_GeneralTypeItems1");

                    b.HasOne("BlackBird.TicketManagement.Infrastructure.Models.GeneralTypeItem", "TicketTypeFkNavigation")
                        .WithMany("TicketTicketTypeFkNavigations")
                        .HasForeignKey("TicketTypeFk")
                        .IsRequired()
                        .HasConstraintName("FK_Tickets_GeneralTypeItems");

                    b.HasOne("BlackBird.TicketManagement.Infrastructure.Models.User", "UpdatedByUserFkNavigation")
                        .WithMany("TicketUpdatedByUserFkNavigations")
                        .HasForeignKey("UpdatedByUserFk")
                        .HasConstraintName("FK_Tickets_Users2");

                    b.Navigation("AsignedToUserFkNavigation");

                    b.Navigation("CreatedByUserFkNavigation");

                    b.Navigation("TicketStateFkNavigation");

                    b.Navigation("TicketTypeFkNavigation");

                    b.Navigation("UpdatedByUserFkNavigation");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.User", b =>
                {
                    b.HasOne("BlackBird.TicketManagement.Infrastructure.Models.UserRole", "RoleFkNavigation")
                        .WithMany("Users")
                        .HasForeignKey("RoleFk")
                        .IsRequired()
                        .HasConstraintName("FK_Users_UserRoles");

                    b.Navigation("RoleFkNavigation");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.GeneralTypeGroup", b =>
                {
                    b.Navigation("GeneralTypeItems");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.GeneralTypeItem", b =>
                {
                    b.Navigation("TicketTicketStateFkNavigations");

                    b.Navigation("TicketTicketTypeFkNavigations");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.User", b =>
                {
                    b.Navigation("TicketAsignedToUserFkNavigations");

                    b.Navigation("TicketCreatedByUserFkNavigations");

                    b.Navigation("TicketUpdatedByUserFkNavigations");
                });

            modelBuilder.Entity("BlackBird.TicketManagement.Infrastructure.Models.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
